{"version":3,"sources":["HOC/Aux.js","CONTEXTS/AuthContext.js","REDUX_STORE/ACTIONS/UserAction.js","UI/NavigationItems.js","UI/DrawerToggle.js","UI/Toolbar.js","UI/Backdrop.js","UI/SideDrawer.js","UI/Layout.js","UI/Card.js","UI/Button.js","UI/Table.js","AXIOS_CONFIG/Axios.js","REDUX_STORE/ACTIONS/ContestAction.js","CONTAINERS/Contests/Contests.js","UTIL/validators.js","UI/Input.js","CONTAINERS/Contests/ContestForm.js","CONTAINERS/Winners/Winners.js","CONTAINERS/Slots/Slots.js","CONTAINERS/Reports/Reports.js","CUSTOM_HOOKS/formHook.js","CONTAINERS/Auth/Auth.js","App.js","reportWebVitals.js","REDUX_STORE/REDUCERS/UserReducer.js","REDUX_STORE/REDUCERS/ContestReducer.js","index.js","REDUX_STORE/STORE/configureStore.js","CSS/NavigationItems.module.css","CSS/Input.module.css","CSS/SideDrawer.module.css","CSS/Toolbar.module.css","CSS/Auth.module.css","CSS/Button.module.css","CSS/Layout.module.css","CSS/DrawerToggle.module.css","CSS/Backdrop.module.css","CSS/Card.module.css","CSS/Table.module.css","CSS/Contests.module.css"],"names":["aux","props","children","AuthContext","React","createContext","login","logout","isLoggedIn","AUTHENTICATION","LOGOUT","email","password","dispatch","getState","a","fetch","method","headers","body","JSON","stringify","returnSecureToken","response","ok","json","errorResponse","errorId","error","message","Error","responseData","console","log","authenticate","idToken","localId","parseInt","expiresIn","expiryDate","Date","getTime","saveData","signup","token","userId","expiryTime","type","localStorage","setItem","NavigationItems","auth","useContext","useDispatch","className","classes","NavigationItem","onClick","clicked","to","exact","removeItem","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","homeTab","DesktopOnly","backdrop","show","Backdrop","SideDrawer","attachedClasses","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerToggleHandler","setState","prevState","sideDrawerClosedHandler","this","Content","Component","Card","cardstyles","style","Button","size","inverse","danger","disabled","table","Table","tableClasses","cols","map","col","index","rows","row","title","toUpperCase","contest_unique_id","no_of_winners","status","winners_declared_at","toDateString","instance","axios","create","baseURL","getContests","get","payload","data","items","Contests","componentDidMount","Container","Row","lg","md","sm","xs","Col","ButtonStyle","history","push","contests","slice","connect","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","validate","value","validators","isValid","validator","trim","length","val","test","inputReducer","action","isTouched","Input","useReducer","inputState","inputElement","inputtype","id","name","placeholder","Inputstyles","InputElement","onChange","event","target","onBlur","onInput","useEffect","setlabel","Label","label","errortext","ContestForm","inputHandler","e","ContestFormCard","FormGroup","Inputid","Winners","Slots","Reports","formReducer","formIsValid","inputId","inputs","user","Auth","override","css","useState","isLoading","setIsLoading","isInvalidLogin","setInvalidLogin","setMessage","isLoginMode","setIsLoginMode","initialInputs","initialFormValidity","formState","dispatchForm","useCallback","useForm","sumbmitHandler","preventDefault","formData","setTimeout","authText","Authentication","LoginForm","color","textDecoration","onSubmit","element","loading","App","setIsLoggedIn","userData","getItem","Provider","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","userReducer","ContestReducer","updatedState","store","createStore","combineReducers","UserReducer","applyMiddleware","ReduxThunk","configureStore","subscribe","jsx","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b94fbb74.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react'\n\nexport const AuthContext = React.createContext({\n\tlogin: () => {},\n\tlogout: () => {},\n\tisLoggedIn: false \n})","import Axios from 'axios'\n\nexport const AUTHENTICATION = 'AUTHENTICATION'\nexport const LOGOUT = 'LOGOUT'\n\nexport const login = (email, password) => {\n\treturn async (dispatch, getState) => {\n\t\tconst response = await fetch(\n\t      \t'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',\n\t      \t{\n\t        \tmethod: 'POST',\n\t        \theaders: {\n\t          \t'Content-Type': 'application/json'\n\t        \t},\n\t\t        body: JSON.stringify({\n\t\t          \temail: email,\n\t\t          \tpassword: password,\n\t\t          \treturnSecureToken: true\n\t\t        })\n      \t\t}\n    \t);\n\n\t\tif(!response.ok){\n\t\t\tconst errorResponse = await response.json()\n\t\t\tconst errorId = errorResponse.error.message\n\t\t\t if(errorId === 'EMAIL_NOT_FOUND'){\n\t\t\t\tthrow new Error('Invalid Email or Password')\n\t\t\t }else if(errorId === 'INVALID_PASSWORD'){\n\t\t\t \tthrow new Error('Invalid Email or Password')\n\t\t\t }else if(errorId === 'USER_DISABLED'){\n\t\t\t \tthrow new Error('Your account is Inactive')\n\t\t\t }\n\t\t}\n\n\t\tconst responseData = await response.json()\n\t\tconsole.log(\"LOGIN RESPONSE\", responseData)\n\t\tdispatch(authenticate(responseData.idToken, responseData.localId, parseInt(responseData.expiresIn) * 100))\n\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 100);\n\t\tsaveData(responseData.idToken, responseData.localId, expiryDate)\n\t}\n}\n\nexport const signup = (email, password) => {\n\treturn async dispatch => {\n\t\tconst response = await fetch(\n\t      \t'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',\n\t      \t{\n\t        \tmethod: 'POST',\n\t        \theaders: {\n\t          \t'Content-Type': 'application/json'\n\t        \t},\n\t\t        body: JSON.stringify({\n\t\t          \temail: email,\n\t\t          \tpassword: password,\n\t\t          \treturnSecureToken: true\n\t\t        })\n      \t\t}\n    \t);\n\n\t\tif(!response.ok){\n\t\t\tconst errorResponse = await response.json()\n\t\t\tconst errorId = errorResponse.error.message\n\t\t\t if(errorId === 'EMAIL_EXISTS'){\n\t\t\t\tthrow new Error('The email address is already in use by another account.')\n\t\t\t }else if(errorId === 'OPERATION_NOT_ALLOWED'){\n\t\t\t \tthrow new Error('Password sign-in is disabled for this project')\n\t\t\t }else if(errorId === 'TOO_MANY_ATTEMPTS_TRY_LATER'){\n\t\t\t \tthrow new Error('We have blocked all requests from this device due to unusual activity. Try again later.')\n\t\t\t }\n\t\t}\n\n\t\tconst responseData = await response.json()\n\t\tconsole.log('SIGNUP RESPONSE', responseData)\n\t\tdispatch(authenticate(responseData.idToken, responseData.localId, parseInt(responseData.expiresIn * 100)))\n\n\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 100);\n\t\tsaveData(responseData.idToken, responseData.localId, expiryDate)\n\t}\n}\n\nexport const authenticate = (token , userId, expiryTime) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: AUTHENTICATION,\n\t\t\ttoken: token,\n\t\t\tuserId: userId\n\t\t})\n\t} \n}\n\nexport const logout = (token, userId) => {\n\tlocalStorage.removeItem('userData')\n\treturn {type: LOGOUT}\n}\n\nexport const setUser = () => {\n\tconst token = localStorage.getItem('userAuthToken') \n\n\treturn async (dispatch, getState) => {\n\t\t\n\t\tconst url = \"https://keepnotesec.herokuapp.com/api/users/account\"\n\t\ttry {\n\t\t\tconst response = await Axios({\n            \tmethod: 'post',\n            \turl: url,\n            \tdata: {},\n            \theaders: {\"x-auth\": token}\n        \t})\n\n\t\t    const responseData = await response.data\n\t\t    dispatch({type: 'SET_USER',payload: responseData})\n\t\t}catch(error){\n\t\t\tconsole.log(\"ERROR\", error)\n\t\t}\n\t}\n}\n\nconst saveData = (token, userId, expiryDate) => {\n\tlocalStorage.setItem('userData', JSON.stringify({token: token, userId: userId, expiryDate: expiryDate}))\n}","import React, {useContext} from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport { useDispatch } from 'react-redux'\n\nimport classes from '../CSS/NavigationItems.module.css'\n\n// authcontext\nimport {AuthContext} from '../CONTEXTS/AuthContext'\n\n// actions\nimport {logout} from '../REDUX_STORE/ACTIONS/UserAction'\n\nconst NavigationItems = (props) => {\n\tconst auth = useContext(AuthContext)\n\tconst dispatch = useDispatch()\n\tconst logoutAuth = () => {\n\t\tdispatch(logout())\n\t\tauth.logout()\n\t}\n\n\treturn (\n\t\t<ul className = {classes.NavigationItems}>\n\t\t\t{!auth.isLoggedIn ? (\n\t\t\t<>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/authentication\" exact>Login</NavLink></li>\n\t\t\t</>\n\t\t\t) : (\n\t\t\t<>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/contests\" exact>Contests</NavLink></li>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/slots\" exact>Slots</NavLink></li>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/winners\" exact>Winners</NavLink></li>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/reports\" exact>Reports</NavLink></li>\n\t\t\t\t<li className = {classes.NavigationItem} onClick = {props.clicked}><NavLink to= \"/logout\" onClick = {logoutAuth}exact>Logout</NavLink></li>\n\t\t\t</>\n\t\t\t)}\n\t\t</ul>\n\t)\n}\n\nexport default NavigationItems;","import React from 'react'\n\nimport classes from '../CSS/DrawerToggle.module.css'\nconst drawerToggle = (props) => (\n\t<div className = {classes.DrawerToggle} onClick = {props.clicked}>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div></div>\n\t</div>\n)\n\nexport default drawerToggle;","import React from 'react'\n\nimport classes from '../CSS/Toolbar.module.css'\n\n\nimport NavigationItems from './NavigationItems'\nimport DrawerToggle from './DrawerToggle'\n\nconst toolbar = (props) => {\n\treturn (\n\t\t<header className = {classes.Toolbar}>\n\t\t\t<DrawerToggle clicked = {props.drawerToggleClicked}/>\n\t\t\t<div className = {classes.homeTab}>Contesting Engine</div>\n\t\t\t<nav className = {classes.DesktopOnly}>\n\t\t\t\t<NavigationItems />\n\t\t\t</nav>\n\t\t</header>\n\t)\n}\n\nexport default toolbar;","import React from 'react'\n\nimport classes from '../CSS/Backdrop.module.css'\n\nconst backdrop = (props) => (\n\tprops.show? <div  className = {classes.Backdrop} onClick = {props.clicked}> </div> : null\n)\n\nexport default backdrop;","import React from 'react'\n\nimport Aux from '../HOC/Aux'\nimport NavigationItems from './NavigationItems'\nimport Backdrop from './Backdrop'\n\nimport classes from '../CSS/SideDrawer.module.css'\n\nconst SideDrawer = (props) => {\n\n\tlet attachedClasses = [classes.SideDrawer, classes.Close];\n    \n    if(props.open){\n    \tattachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n\treturn (\n\t\t<Aux>\n\t\t\t<Backdrop show = {props.open} clicked = {props.closed}/>\n\t\t\t<div className = {attachedClasses.join(' ')}>\n\t\t\t\t<nav>\n                    <NavigationItems  clicked = {props.closed}/>\n                </nav>\n\t\t\t</div>\n\t\t</Aux>\n\t)\n}\n\nexport default SideDrawer;","import React from 'react'\n\nimport classes from '../CSS/Layout.module.css'\n\nimport Aux from '../HOC/Aux'\nimport Toolbar from './Toolbar'\nimport SideDrawer from './SideDrawer'\n\nclass Layout extends React.Component {\n\tstate = {\n\t\tshowSideDrawer: false\n\t}\n\n\tsideDrawerToggleHandler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tshowSideDrawer: !prevState.showSideDrawer\n\t\t\t}\n\t\t})\n\t}\n\n\tsideDrawerClosedHandler = () => {\n\t\tthis.setState({\n\t\t\tshowSideDrawer: false\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<Toolbar drawerToggleClicked = {this.sideDrawerToggleHandler}/>\n\t\t\t\t<SideDrawer \n\t\t\t\t\topen = {this.state.showSideDrawer}\n\t\t\t\t\tclosed = {this.sideDrawerClosedHandler} \n\t\t\t\t/>\n\t\t\t\t<main className = {classes.Content}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</main>\n\t\t\t</Aux>\n\t\t)\n\t}\n}\n\nexport default Layout;","import React from 'react'\n\nimport classes from '../CSS/Card.module.css'\n\nconst Card = (props) => {\n\treturn (\n\t\t<div className = {`${classes.Card} ${props.cardstyles}`}  style = {props.style}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Card;","import React from 'react'\n\nimport classes from '../CSS/Button.module.css'\n\nconst Button = (props) => {\n\treturn (\n\t\t<button \n\t\t\tclassName = {`${classes.Button} ${classes.Button}${props.size} || 'default'} ${props.inverse && 'button--inverse'} ${props.danger && 'button--danger'}`}\n\t\t\ttype = {props.type}\n\t\t\tonClick = {props.onClick}\n\t\t\tdisabled = {props.disabled}\n\t\t>\n\t\t\t{props.children}\n\t\t</button>\n\t)\n}\n\nexport default Button;","import React from 'react'\nimport {Table} from 'react-bootstrap'\n\nimport tableClasses from '../CSS/Table.module.css'\n\nconst table = (props) => {\n  return (\n    <Table className = {tableClasses.Table} >\n      <thead>\n        <tr>\n          {\n            props.cols && props.cols.map((col, index) => <th key = {index}>{col}</th>)\n          }\n        </tr>\n      </thead>\n      <tbody>        \n        {\n          props.rows && props.rows.map((row, index) => (\n            <tr key = {index}>\n              <td>{index}</td>\n              <td>{row.title.toUpperCase()}</td>\n              <td>{row.contest_unique_id}</td>\n              <td>{row.no_of_winners}</td>\n              <td>{row.status}</td>\n              <td>{new Date(row.winners_declared_at).toDateString()}</td>\n              <td>actions</td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </Table>\n  )\n}\n\n\nexport default table;\n\n/*{/*import DataTable from 'react-data-table-component';\n\nconst columns = [\n  {\n    name: 'Title',\n    selector: 'title',\n    sortable: true,\n  },\n  {\n    name: 'Game Id',\n    selector: 'game_id',\n    sortable: true\n  },\n  {\n    name: 'No of Winners',\n    selector: 'winners',\n    sortable: true\n  },\n  {\n    name: 'Status',\n    selector: 'status',\n    sortable: true\n  },\n  {\n  \tname: 'Winners Declaration Date',\n  \tselector: 'date',\n    sortable: true\n  }\n];\n\n\nclass MyComponent extends Component {\n  \n  render() {\n    return (\n      <DataTable\n        columns={columns}\n        data={this.props.data}\n        pagination\n      />\n    )\n  }\n};\n\nexport default MyComponent*/\n","import axios from 'axios'\n\nconst instance = axios.create({\n\tbaseURL: 'http://34.204.190.112:6060/'\n})\n\nexport default instance;","import axios from '../../AXIOS_CONFIG/Axios'\n\nexport const getContests = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst response = await axios.get('/contests')\t\n\t\t\tif(response.status === 200){\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'GET_CONTESTS', payload: response.data.data.items\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tthrow new Error(\"Opps! Something went wrong.\")\n\t\t\t}\t\t\t\n\t\t}catch(error){\n\t\t\tthrow new Error(error.message)\n\t\t}\n\t}\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Col, Row, Container} from 'react-bootstrap'\n\nimport Card from '../../UI/Card'\nimport Button from '../../UI/Button'\nimport Table from '../../UI/Table'\n// Actions\nimport {getContests} from '../../REDUX_STORE/ACTIONS/ContestAction'\n\nimport classes from '../../CSS/Contests.module.css'\n\nclass Contests extends React.Component {\n\tcomponentDidMount = () => {\n\t\tthis.props.dispatch(getContests())\n\t}\n\n\trender (){\n\t// const data = this.props.contests.contests.map((contest, id) => {\n //  \t\treturn (\n //  \t\t\t{title: contest.title.toUpperCase(), game_id: contest.contest_unique_id, id, winners: contest.no_of_winners, status: contest.status.toUpperCase(), date: new Date(contest.winners_declared_at).toDateString()}\n //  \t\t)\n //  \t})\n\n\t\treturn (\n\t\t<Container>\n\t\t\t<Card cardstyles = {classes.Contests}>\n\t\t\t\t<Row lg={12} md={12} sm={12} xs={12}>\n\t\t\t\t\t<Col lg={12} md={12} sm={12} xs = {12}>\n\t\t\t\t\t\t<div className = {classes.ButtonStyle}>\n\t\t\t\t\t\t\t<h3>All Contests</h3>\n\t\t\t\t\t\t\t<Button size = \"small\" onClick = {() => this.props.history.push(\"/contests/new\")}>+ Add Contest</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Table rows = {this.props.contests.contests.slice(0, 10)} cols = {[\"#\",\"Title\",\"Game ID\",\"Winners\",\"Status\",\"Declaration Date\",\"Actions\"]}/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</Container>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    return {contests: state.contests}\n}\n\nexport default connect(mapStateToProps)(Contests);","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import React, {useReducer, useEffect} from 'react'\n\nimport classes from '../CSS/Input.module.css'\nimport { validate } from '../UTIL/validators'\n\nconst inputReducer = (state, action) => {\n\tswitch(action.type){\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.value,\n\t\t\t\tisValid: validate(action.value, action.validators)\n\t\t\t}\n\t\tcase 'TOUCH':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true\n\t\t\t}\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nconst Input = (props) => {\n\n\tconst initialState = {value: '', isValid: false, isTouched: false}\n\n\tconst [inputState, dispatch] = useReducer(inputReducer, initialState)\n\n\tlet inputElement = null;\n\t\n\tconst inputChangeHandler = event => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tvalue: event.target.value,\n\t\t\tvalidators: props.validators\n\t\t})\n\t}\n\n\tconst touchHandler = () => {\n\t\tdispatch({\n\t\t\ttype: 'TOUCH'\n\t\t})\n\t}\n\n\tswitch(props.inputtype){\n\t\tcase ('input') : \n\t\t\tinputElement = <input  \n\t\t\t\ttype = {props.type} \n\t\t\t\tid = {props.id}\n\t\t\t\tname = {props.name}\n\t\t\t\tplaceholder = {props.placeholder}\n\t\t\t\tclassName={props.Inputstyles ? props.Inputstyles : classes.InputElement}\n\t\t\t\tonChange = {inputChangeHandler}\n\t\t\t\tvalue = {inputState.value}\n\t\t\t\tonBlur = {touchHandler}\n\t\t\t/>\n\t\t\t\n\t\t\tbreak;\n\t\tcase ('textarea') : \n\t\t\tinputElement = <textarea  className = {classes.InputElement} {...props} />\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input  className = {classes.InputElement} {...props} />\n\t}\n\n\tconst {id, onInput} = props\n\tconst {value, isValid} = inputState\n\n\tuseEffect(() => {\n\t\tonInput(id, value, isValid)\n\t\t\n\t}, [id, value, isValid, onInput])\n\n\treturn (\n\t\t<div className = {classes.Input}>\n\t\t\t{props.setlabel && <label className = {classes.Label} >{props.label}</label>}\n\t\t\t{inputElement}\n\t\t\t{!inputState.isValid && inputState.isTouched && <p>{props.errortext}</p>}\n\t\t</div>\n\t)\n}\n\nexport default Input;","import React from 'react'\n\nimport Card from '../../UI/Card'\nimport Input from '../../UI/Input'\n\nimport classes from '../../CSS/Contests.module.css'\nconst ContestForm = () => {\n\n\tconst inputHandler = (e) => {\n\t\tconsole.log(\"E\", e)\n\t}\n\n\treturn (\n\t\t<div className = {classes.ContestForm}>\n\t\t\t<Card cardstyles = {classes.ContestFormCard}>\n\t\t\t\t<p>Create New Contest</p>\n\t\t\t\t<hr/>\n\t\t\t\t<div className = {classes.FormGroup}>\n\t\t\t\t\t<Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"gameid\"\n\t                    placeholder = \"Game Id *\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Required\"\n\t                    validators = {[]}\n\t                    setlabel = {false}\n\t                    \t                    Inputstyles = {classes.Inputid}\n\t                />\t\n\t                <Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"title\"\n\t                    placeholder = \"Title *\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Required\"\n\t                    validators = {[]}\n\t                    setlabel = {false}\n\t                    Inputstyles = {classes.Inputid}\n\t                />\t\n\t\t\t\t</div>\n\t\t\t\t<div className = {classes.FormGroup}>\n\t\t\t\t\t<Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"name\"\n\t                    placeholder = \"Contest Name *\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Required\"\n\t                    validators = {[]}\n\t                    setlabel = {false}\n\t                   \tInputstyles = {classes.Inputid}\n\t                />\t\n\n\t\t\t\t\t<select className = {classes.Inputid} disabled>\n\t\t\t\t\t\t<option value = \"#\">Status *</option>\n\t\t\t\t\t\t<option value = \"draft\">Draft</option>\n\t\t\t\t\t\t<option value = \"live\">LIve</option>\n\t\t\t\t\t\t<option value = \"scheduled\">Scheduled</option>\n\t\t\t\t\t</select>\n\t                \n\t\t\t\t</div>\n\t\t\t\t<div className = {classes.FormGroup}>\n\t\t\t\t\t<select className = {classes.Inputid}>\n\t\t\t\t\t\t<option value = \"#\">Language *</option>\n\t\t\t\t\t\t<option value = \"EN\">English</option>\n\t\t\t\t\t\t<option value = \"HI\">Hindi</option>\n\t\t\t\t\t\t<option value = \"GU\">Gujarati</option>\n\t\t\t\t\t</select>\n\t                <select className = {classes.Inputid}>\n\t\t\t\t\t\t<option value = \"#\">Country *</option>\n\t\t\t\t\t\t<option value = \"IN\">India</option>\n\t\t\t\t\t\t<option value = \"US\">US</option>\n\t\t\t\t\t\t<option value = \"ROW\">ROW</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default ContestForm;","import React from 'react'\n\nclass Winners extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\n\t\t}\n\t}\n\trender (){\n\t\treturn (\n\t\t\t<div>This is shivakumara Winners page</div>\n\t\t)\n\t}\n}\n\nexport default Winners","import React from 'react'\n\nclass Slots extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\n\t\t}\n\t}\n\trender (){\n\t\treturn (\n\t\t\t<div>This is shivakumara Slots page</div>\n\t\t)\n\t}\n}\n\nexport default Slots","import React from 'react'\n\nclass Reports extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\n\t\t}\n\t}\n\trender (){\n\t\treturn (\n\t\t\t<div>This is shivakumara Reports page</div>\n\t\t)\n\t}\n}\n\nexport default Reports","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n\tswitch(action.type){\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = true;\n\t\t\tfor(const inputId in state.inputs){\n\t\t\t\tif(!state.inputs[inputId]){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tif(inputId === action.inputId){\n\t\t\t\t\tformIsValid = formIsValid && action.isValid\n\t\t\t\t}else{\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet updatedState = {\n\t\t\t\t...state,\n\t\t\t\tinputs: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: {\n\t\t\t\t\t\tvalue: action.value,\n\t\t\t\t\t\tisValid: action.isValid\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tformIsValid\n\t\t\t}\n\n\t\t\treturn updatedState;\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\tconst [formState, dispatchForm] = useReducer(\n\t\tformReducer, { inputs: initialInputs, formIsValid: initialFormValidity }\n\t)\n\n\tconst inputHandler = useCallback((inputId, value, isValid) => {\n\t\tdispatchForm({\n\t\t\ttype: 'INPUT_CHANGE',\n\t\t\tvalue,isValid,inputId\n\t\t})\n\t\t// console.log(\"formState\", formState)\n\t}, [])\n\n\tconst setFormData = useCallback((inputs, formIsValid) => {\n\t\t// console.log(\"INPUTS\", inputs, formIsValid)\n\t\tdispatchForm({\n\t\t\ttype: 'SET_DATA',\n\t\t\tinputs, formIsValid \n\t\t})\n\t}, [])\n\n\treturn [formState, inputHandler, setFormData]\n}","import React, {useContext, useState} from 'react'\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { css } from \"@emotion/core\";\nimport { connect } from 'react-redux'\nimport {useDispatch} from 'react-redux'\n\nimport {VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MIN} from '../../UTIL/validators'\nimport {useForm} from '../../CUSTOM_HOOKS/formHook'\n\nimport Card from '../../UI/Card'\nimport Button from '../../UI/Button'\nimport Input from '../../UI/Input'\n\nimport classes from '../../CSS/Auth.module.css'\n\n// actions\nimport {login, signup} from '../../REDUX_STORE/ACTIONS/UserAction'\n\nimport { AuthContext } from '../../CONTEXTS/AuthContext'\n\nconst Auth = (props) => {\n\tconst Auth = useContext(AuthContext)\n\n\tconst override = css`\n\t  display: block;\n\t  margin: 0 auto;\n\t  color: yellow;\n\t`;\n\n\tconst dispatch = useDispatch()\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [isInvalidLogin, setInvalidLogin] = useState(false)\n\tconst [message, setMessage] = useState()\n\tconst [isLoginMode, setIsLoginMode] = useState(true)\n\tconst [formState, inputHandler] = useForm({\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        }, false)\n\t\n\n\tconst sumbmitHandler = async (e) => {\n\t\te.preventDefault()\n\n\t\tlet formData = {\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n        }\n\n        try{\n        \tsetIsLoading(true)\n        \tif(isLoginMode){\n\t\t\t\tconst {email, password} = formData\n\t\t        await dispatch(login(email, password))\n\t\t        setMessage('Successfully SignedIn !!!')\n\t\t        setTimeout(() => {\n\t\t        \tsetIsLoading(false)\n\t\t        \tsetInvalidLogin(false)\n\t\t        \tAuth.login()\n\t\t        \tprops.history.push('/contests')\n\t\t        }, 1000)        \t\t\n        \t}else{\n\t        \tconst {email, password} = formData\n\t\t        await dispatch(signup(email, password))\n\t\t        setMessage('Successfully Registered !!!')\n\t\t        setTimeout(() => {\n\t\t        \tsetIsLoading(false)\n\t\t        \tsetInvalidLogin(false)\n\t\t        \tAuth.login()\n\t\t        }, 1000)\n        \t}\n\n        }catch(error){\n        \tsetInvalidLogin(true)\n        \tsetMessage(error.message)\n        \tsetIsLoading(false)\n        }\n\t}\n\n\tconst changeAuthHandler = () => {\n\t\tsetIsLoginMode(!isLoginMode)\n\t}\n\n\tconst authText = isLoginMode ? 'SignIn' : 'SignUp'\n\n\treturn (\n\t\t<div className = {classes.Authentication}>\n\t\t\t<Card cardstyles = {classes.LoginForm} >\n\t\t\t\t{isInvalidLogin && <p>{message}</p>}\n\t\t\t\t{!isInvalidLogin && <strong style = {{color: 'green',  textDecoration: 'none'}}>{message}</strong>}\n\t\t\t\t\n\t\t\t\t<form onSubmit = {sumbmitHandler} className = {classes.LoginForm}>\n\t\t\t\t\t<Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"email\"\n\t                    placeholder = \"Enter email\"\n\t                    label = \"Email\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid email.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n\t                />\n\n\t                <Input \n\t                \tinputtype = \"input\"\n\t                    type = \"password\"\n\t                    id = \"password\"\n\t                    placeholder = \"Enter password\"\n\t                    element = \"input\"\n\t                    label = \"Password\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid password.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_MIN(6)]}\n\t                />\n\n\t                <Button \n\t                \ttype = \"submit\"\n\t                \tsize = \"Small\"\n\t                \tdisabled = {!formState.formIsValid}\n\t                >\n\t                \t{isLoading ? <PulseLoader color=\"white\" loading={isLoading} size={5} css={override}/> : authText}\n\t                </Button>\n\n\t\t\t\t</form>\n\t\t\t\t<strong onClick = {changeAuthHandler}>{isLoginMode ? 'Are you new User?' : 'Are you registered already?'}</strong>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\n\nexport default connect(mapStateToProps)(Auth);","import React,{useCallback, useEffect, useState} from 'react'\n\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom'\n\nimport Layout from './UI/Layout'\nimport Contests from './CONTAINERS/Contests/Contests'\nimport ContestForm from './CONTAINERS/Contests/ContestForm'\n\nimport Winners from './CONTAINERS/Winners/Winners'\nimport Slots from './CONTAINERS/Slots/Slots'\nimport Reports from './CONTAINERS/Reports/Reports'\nimport Auth from './CONTAINERS/Auth/Auth'\n\n// auth context \nimport { AuthContext } from './CONTEXTS/AuthContext'\n\n// lazy loading\n// const Contests = React.lazy(() => import('./CONTAINERS/Contests'))\n\n// dispatch action\n// import { useDispatch } from 'react-redux'\n\nconst App = () => {\n\t// const dispatch = useDispatch()\n\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\n\tconst login = useCallback(() => {\n\t\tsetIsLoggedIn(true)\n\t}, [setIsLoggedIn])\n\n\tconst logout = useCallback(() => {\n\t\tsetIsLoggedIn(false)\n\t\t// localStorage.removeItem('userAuthToken')\n\t\t// dispatch(logout())\n\t}, [setIsLoggedIn])\n\n\tuseEffect(() => {\n\t\tconst userData = localStorage.getItem('userData')\n\t\tif(userData){\n\t\t\t// dispatch(setUser())\n\t\t\tsetIsLoggedIn(true)\n\t\t}else{\n\t\t\tsetIsLoggedIn(false)\n\t\t}\n\t}, [setIsLoggedIn])\n\n  return (\n  \t<AuthContext.Provider value = {{isLoggedIn, login, logout}}>\n\t  \t<BrowserRouter>\n\t\t  \t<div>\n\t\t\t    <Layout>\n\t\t\t    {isLoggedIn ? (\n\t\t\t    \t<>\n\t\t\t\t\t\t<Route path = \"/contests\" component = {Contests} exact/>\n\t\t\t\t\t\t<Route path = \"/contests/new\" component = {ContestForm} exact />\n\t\t\t\t\t\t<Route path = \"/slots\" component = {Slots} exact/>\t\t    \t\n\t\t\t\t\t\t<Route path = \"/winners\" component = {Winners} exact/>\t\t    \t\n\t\t\t\t\t\t<Route path = \"/reports\" component = {Reports} exact/>\t\n\t\t\t\t\t\t<Redirect to = \"/contests\" />\n\t\t\t    \t</>\n\t\t\t    \t) : (\n\t\t\t    \t<>\n\t\t\t\t\t\t<Route path = \"/authentication\" component = {Auth} exact />\n\t\t\t\t\t\t<Redirect to = \"/authentication\" />\n\t\t\t    \t</>\n\t\t\t    \t)}\n\t\t\t    </Layout>\n\t\t    </div>\n\t    </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AUTHENTICATION, LOGOUT} from '../ACTIONS/UserAction'\n\nconst initialState = {\n\ttoken: null,\n\tuserId: null\n}\n\nconst userReducer = (state = initialState, action) => {\n\tswitch(action.type){\n\t\tcase AUTHENTICATION: \n\t\t\treturn {\n\t\t\t\ttoken: action.token,\n\t\t\t\tuserId: action.userId\n\t\t\t}\n\t\tcase LOGOUT: \n\t\t\treturn initialState\n\t\tdefault: \n\t\treturn state;\n\t}\n}\n\nexport default userReducer;","const initialState = {\n\tcontests: []\n}\n\nconst ContestReducer = (state =  initialState, action) => {\n\tswitch(action.type){\n\t\tcase 'GET_CONTESTS':\n\t\t\tconst updatedState =  {\n\t\t\t\t...state,\n\t\t\t\tcontests: action.payload\n\t\t\t}\n\n\t\t\treturn updatedState;\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nexport default ContestReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport reportWebVitals from './reportWebVitals';\n\nimport configureStore from './REDUX_STORE/STORE/configureStore'\n\nconst store = configureStore()\n\nstore.subscribe(() => {\n\tconsole.log(\"UPDAETED STORE IS :: \", store.getState())\n})\n\nconst jsx = (\n\t<Provider store = {store}> \n\t\t<App />\n\t</Provider>\n)\n\nReactDOM.render(jsx,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","import {\n\tcreateStore, combineReducers, applyMiddleware\n} from 'redux'\n\nimport ReduxThunk from 'redux-thunk'\n\nimport UserReducer from '../REDUCERS/UserReducer'\nimport ContestReducer from '../REDUCERS/ContestReducer'\n\nconst configureStore = () => {\n\tconst store = createStore(combineReducers({\n\t\tuser: UserReducer,\n\t\tcontests: ContestReducer\n\t}),applyMiddleware(ReduxThunk))\n\treturn store;\n}\n\nexport default configureStore;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2A2M5\",\"NavigationItem\":\"NavigationItems_NavigationItem__2RJ6a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3ZsiZ\",\"Label\":\"Input_Label__buRMo\",\"InputElement\":\"Input_InputElement__3J98W\",\"form-control\":\"Input_form-control__1EhMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__9CFYd\",\"Open\":\"SideDrawer_Open__1D-Va\",\"Close\":\"SideDrawer_Close__2bS69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__151ke\",\"homeTab\":\"Toolbar_homeTab__2Gaf2\",\"DesktopOnly\":\"Toolbar_DesktopOnly__Nebfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Auth_Authentication__3WP5R\",\"LoginForm\":\"Auth_LoginForm__1whfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__rMpfY\",\"ButtonSmall\":\"Button_ButtonSmall__20ddq\",\"ButtonBig\":\"Button_ButtonBig__lnL4p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__vbwpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__YPo01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1mj3O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__3olZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"Table_Table__3kxj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contests\":\"Contests_Contests__6S78j\",\"ButtonStyle\":\"Contests_ButtonStyle__3QL7U\",\"Modal\":\"Contests_Modal__1km9O\",\"ContestForm\":\"Contests_ContestForm__1_NDF\",\"ContestFormCard\":\"Contests_ContestFormCard__21U17\",\"FormGroup\":\"Contests_FormGroup__3jEc4\",\"Inputid\":\"Contests_Inputid__1JYvx\"};"],"sourceRoot":""}