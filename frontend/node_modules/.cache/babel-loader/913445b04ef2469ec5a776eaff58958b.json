{"ast":null,"code":"import _regeneratorRuntime from\"/home/s/personal/Javascript/React/contesting-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/s/personal/Javascript/React/contesting-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Axios from'axios';export var AUTHENTICATION='AUTHENTICATION';export var LOGOUT='LOGOUT';export var login=function login(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var response,errorResponse,errorId,responseData,expiryDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password,returnSecureToken:true})});case 2:response=_context.sent;if(response.ok){_context.next=18;break;}_context.next=6;return response.json();case 6:errorResponse=_context.sent;errorId=errorResponse.error.message;if(!(errorId==='EMAIL_NOT_FOUND')){_context.next=12;break;}throw new Error('Invalid Email or Password');case 12:if(!(errorId==='INVALID_PASSWORD')){_context.next=16;break;}throw new Error('Invalid Email or Password');case 16:if(!(errorId==='USER_DISABLED')){_context.next=18;break;}throw new Error('Your account is Inactive');case 18:_context.next=20;return response.json();case 20:responseData=_context.sent;console.log(\"LOGIN RESPONSE\",responseData);dispatch(authenticate(responseData.idToken,responseData.localId,parseInt(responseData.expiresIn)*100));expiryDate=new Date(new Date().getTime()+parseInt(responseData.expiresIn)*100);saveData(responseData.idToken,responseData.localId,expiryDate);case 25:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var signup=function signup(email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,errorResponse,errorId,responseData,expiryDate;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,password:password,returnSecureToken:true})});case 2:response=_context2.sent;if(response.ok){_context2.next=18;break;}_context2.next=6;return response.json();case 6:errorResponse=_context2.sent;errorId=errorResponse.error.message;if(!(errorId==='EMAIL_EXISTS')){_context2.next=12;break;}throw new Error('The email address is already in use by another account.');case 12:if(!(errorId==='OPERATION_NOT_ALLOWED')){_context2.next=16;break;}throw new Error('Password sign-in is disabled for this project');case 16:if(!(errorId==='TOO_MANY_ATTEMPTS_TRY_LATER')){_context2.next=18;break;}throw new Error('We have blocked all requests from this device due to unusual activity. Try again later.');case 18:_context2.next=20;return response.json();case 20:responseData=_context2.sent;console.log('SIGNUP RESPONSE',responseData);dispatch(authenticate(responseData.idToken,responseData.localId,parseInt(responseData.expiresIn*100)));expiryDate=new Date(new Date().getTime()+parseInt(responseData.expiresIn)*100);saveData(responseData.idToken,responseData.localId,expiryDate);case 25:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}();};export var authenticate=function authenticate(token,userId,expiryTime){return function(dispatch){dispatch({type:AUTHENTICATION,token:token,userId:userId});};};export var logout=function logout(token,userId){localStorage.removeItem('userData');return{type:LOGOUT};};export var setUser=function setUser(){var token=localStorage.getItem('userAuthToken');return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var url,response,responseData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:url=\"https://keepnotesec.herokuapp.com/api/users/account\";_context3.prev=1;_context3.next=4;return Axios({method:'post',url:url,data:{},headers:{\"x-auth\":token}});case 4:response=_context3.sent;_context3.next=7;return response.data;case 7:responseData=_context3.sent;dispatch({type:'SET_USER',payload:responseData});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](1);console.log(\"ERROR\",_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[1,11]]);}));return function(_x4,_x5){return _ref3.apply(this,arguments);};}();};var saveData=function saveData(token,userId,expiryDate){localStorage.setItem('userData',JSON.stringify({token:token,userId:userId,expiryDate:expiryDate}));};","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/REDUX_STORE/ACTIONS/UserAction.js"],"names":["Axios","AUTHENTICATION","LOGOUT","login","email","password","dispatch","getState","fetch","method","headers","body","JSON","stringify","returnSecureToken","response","ok","json","errorResponse","errorId","error","message","Error","responseData","console","log","authenticate","idToken","localId","parseInt","expiresIn","expiryDate","Date","getTime","saveData","signup","token","userId","expiryTime","type","logout","localStorage","removeItem","setUser","getItem","url","data","payload","setItem"],"mappings":"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","sourcesContent":["import Axios from 'axios'\n\nexport const AUTHENTICATION = 'AUTHENTICATION'\nexport const LOGOUT = 'LOGOUT'\n\nexport const login = (email, password) => {\n\treturn async (dispatch, getState) => {\n\t\tconst response = await fetch(\n\t      \t'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',\n\t      \t{\n\t        \tmethod: 'POST',\n\t        \theaders: {\n\t          \t'Content-Type': 'application/json'\n\t        \t},\n\t\t        body: JSON.stringify({\n\t\t          \temail: email,\n\t\t          \tpassword: password,\n\t\t          \treturnSecureToken: true\n\t\t        })\n      \t\t}\n    \t);\n\n\t\tif(!response.ok){\n\t\t\tconst errorResponse = await response.json()\n\t\t\tconst errorId = errorResponse.error.message\n\t\t\t if(errorId === 'EMAIL_NOT_FOUND'){\n\t\t\t\tthrow new Error('Invalid Email or Password')\n\t\t\t }else if(errorId === 'INVALID_PASSWORD'){\n\t\t\t \tthrow new Error('Invalid Email or Password')\n\t\t\t }else if(errorId === 'USER_DISABLED'){\n\t\t\t \tthrow new Error('Your account is Inactive')\n\t\t\t }\n\t\t}\n\n\t\tconst responseData = await response.json()\n\t\tconsole.log(\"LOGIN RESPONSE\", responseData)\n\t\tdispatch(authenticate(responseData.idToken, responseData.localId, parseInt(responseData.expiresIn) * 100))\n\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 100);\n\t\tsaveData(responseData.idToken, responseData.localId, expiryDate)\n\t}\n}\n\nexport const signup = (email, password) => {\n\treturn async dispatch => {\n\t\tconst response = await fetch(\n\t      \t'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAYKf9Bsifod7s9S8GFbarUwQJ0t8XzZs4',\n\t      \t{\n\t        \tmethod: 'POST',\n\t        \theaders: {\n\t          \t'Content-Type': 'application/json'\n\t        \t},\n\t\t        body: JSON.stringify({\n\t\t          \temail: email,\n\t\t          \tpassword: password,\n\t\t          \treturnSecureToken: true\n\t\t        })\n      \t\t}\n    \t);\n\n\t\tif(!response.ok){\n\t\t\tconst errorResponse = await response.json()\n\t\t\tconst errorId = errorResponse.error.message\n\t\t\t if(errorId === 'EMAIL_EXISTS'){\n\t\t\t\tthrow new Error('The email address is already in use by another account.')\n\t\t\t }else if(errorId === 'OPERATION_NOT_ALLOWED'){\n\t\t\t \tthrow new Error('Password sign-in is disabled for this project')\n\t\t\t }else if(errorId === 'TOO_MANY_ATTEMPTS_TRY_LATER'){\n\t\t\t \tthrow new Error('We have blocked all requests from this device due to unusual activity. Try again later.')\n\t\t\t }\n\t\t}\n\n\t\tconst responseData = await response.json()\n\t\tconsole.log('SIGNUP RESPONSE', responseData)\n\t\tdispatch(authenticate(responseData.idToken, responseData.localId, parseInt(responseData.expiresIn * 100)))\n\n\t\tconst expiryDate = new Date(new Date().getTime() + parseInt(responseData.expiresIn) * 100);\n\t\tsaveData(responseData.idToken, responseData.localId, expiryDate)\n\t}\n}\n\nexport const authenticate = (token , userId, expiryTime) => {\n\treturn dispatch => {\n\t\tdispatch({\n\t\t\ttype: AUTHENTICATION,\n\t\t\ttoken: token,\n\t\t\tuserId: userId\n\t\t})\n\t} \n}\n\nexport const logout = (token, userId) => {\n\tlocalStorage.removeItem('userData')\n\treturn {type: LOGOUT}\n}\n\nexport const setUser = () => {\n\tconst token = localStorage.getItem('userAuthToken') \n\n\treturn async (dispatch, getState) => {\n\t\t\n\t\tconst url = \"https://keepnotesec.herokuapp.com/api/users/account\"\n\t\ttry {\n\t\t\tconst response = await Axios({\n            \tmethod: 'post',\n            \turl: url,\n            \tdata: {},\n            \theaders: {\"x-auth\": token}\n        \t})\n\n\t\t    const responseData = await response.data\n\t\t    dispatch({type: 'SET_USER',payload: responseData})\n\t\t}catch(error){\n\t\t\tconsole.log(\"ERROR\", error)\n\t\t}\n\t}\n}\n\nconst saveData = (token, userId, expiryDate) => {\n\tlocalStorage.setItem('userData', JSON.stringify({token: token, userId: userId, expiryDate: expiryDate}))\n}"]},"metadata":{},"sourceType":"module"}