{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Contests.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Table from 'react-bootstrap/Table';\nimport { Col, Row, Container } from 'react-bootstrap';\nimport Card from '../UI/Card';\nimport classes from '../CSS/Contests.module.css'; // Actions\n\nimport { getContests } from '../REDUX_STORE/ACTIONS/ContestAction'; // components\n\nimport MyComponent from '../COMPONENTS/Table';\nimport tableClasses from '../CSS/Table.module.css';\n\nclass Contests extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      this.props.dispatch(getContests());\n    };\n  }\n\n  render() {\n    const data = this.props.contests.contests.map((contest, id) => {\n      return {\n        title: contest.title.toUpperCase(),\n        game_id: contest.contest_unique_id,\n        id,\n        winners: contest.no_of_winners,\n        status: contest.status.toUpperCase(),\n        date: new Date(contest.winners_declared_at).toDateString()\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        cardstyles: classes.Contests,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 12,\n            md: 12,\n            sm: 12,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" + Add Contests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              className: tableClasses.Table,\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Game ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Winners\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Daclaration Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.props.contests.contests.length > 0 && this.props.contests.contests.map((contest, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: index\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: contest.title.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: contest.contest_unique_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: contest.no_of_winners\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: contest.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: contest.winners_declared_at\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 11\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 13\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    contests: state.contests\n  };\n};\n\nexport default connect(mapStateToProps)(Contests);","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Contests.js"],"names":["React","connect","Table","Col","Row","Container","Card","classes","getContests","MyComponent","tableClasses","Contests","Component","componentDidMount","props","dispatch","render","data","contests","map","contest","id","title","toUpperCase","game_id","contest_unique_id","winners","no_of_winners","status","date","Date","winners_declared_at","toDateString","length","index","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport Table from 'react-bootstrap/Table'\nimport {Col, Row, Container} from 'react-bootstrap'\n\nimport Card from '../UI/Card'\n\nimport classes from '../CSS/Contests.module.css'\n\n// Actions\nimport {getContests} from '../REDUX_STORE/ACTIONS/ContestAction'\n\n// components\nimport MyComponent from '../COMPONENTS/Table'\n\nimport tableClasses from '../CSS/Table.module.css'\n\nclass Contests extends React.Component {\n\n\tcomponentDidMount = () => {\n\t\tthis.props.dispatch(getContests())\n\t}\n\n\trender (){\n\tconst data = this.props.contests.contests.map((contest, id) => {\n  \t\treturn (\n  \t\t\t{title: contest.title.toUpperCase(), game_id: contest.contest_unique_id, id, winners: contest.no_of_winners, status: contest.status.toUpperCase(), date: new Date(contest.winners_declared_at).toDateString()}\n  \t\t)\n  \t})\n\n\t\treturn (\n\t\t<Container>\n\t\t\t<Card cardstyles = {classes.Contests}>\n\t\t\t\t<Row lg={12} md={12} sm={12} xs={12}>\n\t\t\t\t\t<Col lg={12} md={12} sm={12} xs = {12}>\n\t\t\t\t\t\t<p> + Add Contests</p>\n\t\t\t\t\t\t{<Table className = {tableClasses.Table}>\n\t\t\t\t\t\t  <thead>\n\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t      <th>#</th>\n\t\t\t\t\t\t      <th>Title</th>\n\t\t\t\t\t\t      <th>Game ID</th>\n\t\t\t\t\t\t      <th>Winners</th>\n\t\t\t\t\t\t      <th>Status</th>\n\t\t\t\t\t\t      <th>Daclaration Date</th>\n\t\t\t\t\t\t      <th>Actions</th>\n\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t  </thead>\n\t\t\t\t\t\t  <tbody>\n\t\t\t\t\t\t\t  {(this.props.contests.contests.length > 0) && this.props.contests.contests.map((contest, index) => \n\t\t\t\t\t\t\t    \t<tr key = {index}>\n\t\t\t\t\t\t\t\t\t\t<td>{index}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{contest.title.toUpperCase()}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{contest.contest_unique_id}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{contest.no_of_winners}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{contest.status}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{contest.winners_declared_at}</td>\n\t\t\t\t\t\t\t\t\t\t<td>actions</td>\n\t\t\t\t\t\t\t    \t</tr>\n\t\t\t\t\t\t\t  \t\n\t\t\t\t\t\t\t  )}\n\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t\t</Table>}\n\n\t\t\t\t\t\t{/*(this.props.contests.contests.length > 0) && <MyComponent data = {data}/>*/}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</Container>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n    return {contests: state.contests}\n}\n\nexport default connect(mapStateToProps)(Contests);"]},"metadata":{},"sourceType":"module"}