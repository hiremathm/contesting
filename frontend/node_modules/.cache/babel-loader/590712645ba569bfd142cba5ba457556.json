{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/s/personal/Javascript/React/contesting-engine/src/UI/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport classes from '../CSS/Input.module.css';\nimport { validate } from '../UTIL/validators';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return { ...state,\n        value: action.value,\n        isValid: validate(action.value, action.validators)\n      };\n\n    case 'TOUCH':\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const initialState = {\n    value: '',\n    isValid: false,\n    isTouched: false\n  };\n  const [inputState, dispatch] = useReducer(inputReducer, initialState);\n  let inputElement = null;\n\n  const inputChangeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      value: event.target.value,\n      validators: props.validators\n    });\n    return {};\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  switch (props.inputtype) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        type: props.type,\n        id: props.id,\n        name: props.name,\n        placeholder: props.placeholder,\n        className: classes.InputElement,\n        onChange: inputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes.InputElement,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.InputElement,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: classes.Label,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), inputElement]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Input, \"WTVy3W/BBpinEIavl2C9EMTzZQQ=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/UI/Input.js"],"names":["React","useReducer","useEffect","classes","validate","inputReducer","state","action","type","value","isValid","validators","isTouched","Input","props","initialState","inputState","dispatch","inputElement","inputChangeHandler","event","target","touchHandler","inputtype","id","name","placeholder","InputElement","Label","label"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,QAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENG,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFR;AAGNC,QAAAA,OAAO,EAAEN,QAAQ,CAACG,MAAM,CAACE,KAAR,EAAeF,MAAM,CAACI,UAAtB;AAHX,OAAP;;AAKD,SAAK,OAAL;AACC,aAAO,EACN,GAAGL,KADG;AAENM,QAAAA,SAAS,EAAE;AAFL,OAAP;;AAID;AACC,aAAON,KAAP;AAbF;AAeA,CAhBD;;AAkBA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,YAAY,GAAG;AAACN,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,OAAO,EAAE,KAArB;AAA4BE,IAAAA,SAAS,EAAE;AAAvC,GAArB;AAEA,QAAM,CAACI,UAAD,EAAaC,QAAb,IAAyBhB,UAAU,CAACI,YAAD,EAAeU,YAAf,CAAzC;AAEA,MAAIG,YAAY,GAAG,IAAnB;;AAEA,QAAMC,kBAAkB,GAAGC,KAAK,IAAI;AACnCH,IAAAA,QAAQ,CAAC;AACRT,MAAAA,IAAI,EAAE,QADE;AAERC,MAAAA,KAAK,EAAEW,KAAK,CAACC,MAAN,CAAaZ,KAFZ;AAGRE,MAAAA,UAAU,EAAEG,KAAK,CAACH;AAHV,KAAD,CAAR;AAMA,WAAO,EAAP;AACA,GARD;;AAUA,QAAMW,YAAY,GAAG,MAAM;AAC1BL,IAAAA,QAAQ,CAAC;AACRT,MAAAA,IAAI,EAAE;AADE,KAAD,CAAR;AAGA,GAJD;;AAMA,UAAOM,KAAK,CAACS,SAAb;AACC,SAAM,OAAN;AACCL,MAAAA,YAAY,gBAAG;AACd,QAAA,IAAI,EAAIJ,KAAK,CAACN,IADA;AAEd,QAAA,EAAE,EAAIM,KAAK,CAACU,EAFE;AAGd,QAAA,IAAI,EAAIV,KAAK,CAACW,IAHA;AAId,QAAA,WAAW,EAAIX,KAAK,CAACY,WAJP;AAKd,QAAA,SAAS,EAAEvB,OAAO,CAACwB,YALL;AAMd,QAAA,QAAQ,EAAIR;AANE;AAAA;AAAA;AAAA;AAAA,cAAf;AAQA;;AACD,SAAM,UAAN;AACCD,MAAAA,YAAY,gBAAG;AAAW,QAAA,SAAS,EAAIf,OAAO,CAACwB,YAAhC;AAAA,WAAkDb;AAAlD;AAAA;AAAA;AAAA;AAAA,cAAf;AACA;;AACD;AACCI,MAAAA,YAAY,gBAAG;AAAQ,QAAA,SAAS,EAAIf,OAAO,CAACwB,YAA7B;AAAA,WAA+Cb;AAA/C;AAAA;AAAA;AAAA;AAAA,cAAf;AAfF;;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAIX,OAAO,CAACU,KAA1B;AAAA,4BACC;AAAO,MAAA,SAAS,EAAIV,OAAO,CAACyB,KAA5B;AAAA,gBAAqCd,KAAK,CAACe;AAA3C;AAAA;AAAA;AAAA;AAAA,YADD,EAEEX,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAhDD;;GAAML,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react'\n\nimport classes from '../CSS/Input.module.css'\nimport { validate } from '../UTIL/validators'\n\nconst inputReducer = (state, action) => {\n\tswitch(action.type){\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.value,\n\t\t\t\tisValid: validate(action.value, action.validators)\n\t\t\t}\n\t\tcase 'TOUCH':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true\n\t\t\t}\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nconst Input = (props) => {\n\n\tconst initialState = {value: '', isValid: false, isTouched: false}\n\n\tconst [inputState, dispatch] = useReducer(inputReducer, initialState)\n\n\tlet inputElement = null;\n\t\n\tconst inputChangeHandler = event => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tvalue: event.target.value,\n\t\t\tvalidators: props.validators\n\t\t})\n\n\t\treturn {}\n\t}\n\n\tconst touchHandler = () => {\n\t\tdispatch({\n\t\t\ttype: 'TOUCH'\n\t\t})\n\t}\n\n\tswitch(props.inputtype){\n\t\tcase ('input') : \n\t\t\tinputElement = <input  \n\t\t\t\ttype = {props.type} \n\t\t\t\tid = {props.id}\n\t\t\t\tname = {props.name}\n\t\t\t\tplaceholder = {props.placeholder}\n\t\t\t\tclassName={classes.InputElement}\n\t\t\t\tonChange = {inputChangeHandler}\n\t\t\t/>\n\t\t\tbreak;\n\t\tcase ('textarea') : \n\t\t\tinputElement = <textarea  className = {classes.InputElement} {...props} />\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tinputElement = <input  className = {classes.InputElement} {...props} />\n\t}\n\n\treturn (\n\t\t<div className = {classes.Input}>\n\t\t\t<label className = {classes.Label} >{props.label}</label>\n\t\t\t{inputElement}\n\t\t</div>\n\t)\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}