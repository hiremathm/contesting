{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = false;\n\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n\n      let updatedState = { ...state,\n        inptus: { ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        formIsValid\n      };\n      return updatedState;\n\n    case 'SET_DATA':\n      return { ...state,\n        inputs: action.inputs,\n        formIsValid: action.formIsValid\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  _s();\n\n  const [formState, dispatchForm] = useReducer(formReducer, {\n    inputs: initialInputs,\n    formIsValid: initialFormValidity\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatchForm({\n      type: 'INPUT_CHANGE',\n      value,\n      isValid,\n      inputId\n    });\n  });\n};\n\n_s(useForm, \"72ROzhWnyQ3e/WLNEc9Cn91kwjY=\");","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/CUSTOM_HOOKS/formHook.js"],"names":["React","useReducer","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","updatedState","inptus","value","useForm","initialInputs","initialFormValidity","formState","dispatchForm","inputHandler","useCallback","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,cAAL;AACC,UAAIC,WAAW,GAAG,KAAlB;;AACA,WAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,MAA3B,EAAmC;AAClC,YAAG,CAACL,KAAK,CAACK,MAAN,CAAaD,OAAb,CAAJ,EAA0B;AACzB;AACA;;AAED,YAAGA,OAAO,KAAKH,MAAM,CAACG,OAAtB,EAA8B;AAC7BD,UAAAA,WAAW,GAAGA,WAAW,IAAIF,MAAM,CAACK,OAApC;AACA,SAFD,MAEK;AACJH,UAAAA,WAAW,GAAGA,WAAW,IAAIH,KAAK,CAACK,MAAN,CAAaD,OAAb,EAAsBE,OAAnD;AACA;AACD;;AAED,UAAIC,YAAY,GAAG,EAClB,GAAGP,KADe;AAElBQ,QAAAA,MAAM,EAAE,EACP,GAAGR,KAAK,CAACK,MADF;AAEP,WAACJ,MAAM,CAACG,OAAR,GAAkB;AACjBK,YAAAA,KAAK,EAAER,MAAM,CAACQ,KADG;AAEjBH,YAAAA,OAAO,EAAEL,MAAM,CAACK;AAFC;AAFX,SAFU;AASlBH,QAAAA;AATkB,OAAnB;AAYA,aAAOI,YAAP;;AACD,SAAK,UAAL;AACC,aAAO,EACN,GAAGP,KADG;AAENK,QAAAA,MAAM,EAAEJ,MAAM,CAACI,MAFT;AAGNF,QAAAA,WAAW,EAAEF,MAAM,CAACE;AAHd,OAAP;;AAMD;AACC,aAAOH,KAAP;AApCF;AAsCA,CAvCD;;AAyCA,OAAO,MAAMU,OAAO,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;AAAA;;AAC9D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,UAAU,CAC3CC,WAD2C,EAC9B;AAAEM,IAAAA,MAAM,EAAEM,aAAV;AAAyBR,IAAAA,WAAW,EAAES;AAAtC,GAD8B,CAA5C;AAIA,QAAMG,YAAY,GAAGC,WAAW,CAAC,CAACC,EAAD,EAAKR,KAAL,EAAYH,OAAZ,KAAwB;AACxDQ,IAAAA,YAAY,CAAC;AACZZ,MAAAA,IAAI,EAAE,cADM;AAEZO,MAAAA,KAFY;AAENH,MAAAA,OAFM;AAEEF,MAAAA;AAFF,KAAD,CAAZ;AAIA,GAL+B,CAAhC;AAMA,CAXM;;GAAMM,O","sourcesContent":["import React, {useReducer} from 'react'\n\nconst formReducer = (state, action) => {\n\tswitch(action.type){\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = false;\n\t\t\tfor(const inputId in state.inputs) {\n\t\t\t\tif(!state.inputs[inputId]){\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tif(inputId === action.inputId){\n\t\t\t\t\tformIsValid = formIsValid && action.isValid\n\t\t\t\t}else{\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet updatedState = {\n\t\t\t\t...state,\n\t\t\t\tinptus: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: {\n\t\t\t\t\t\tvalue: action.value,\n\t\t\t\t\t\tisValid: action.isValid\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tformIsValid\n\t\t\t}\n\n\t\t\treturn updatedState;\n\t\tcase 'SET_DATA':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinputs: action.inputs,\n\t\t\t\tformIsValid: action.formIsValid\n\t\t\t}\n\n\t\tdefault: \n\t\t\treturn state\n\t}\n}\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\tconst [formState, dispatchForm] = useReducer(\n\t\tformReducer, { inputs: initialInputs, formIsValid: initialFormValidity }\n\t)\n\n\tconst inputHandler = useCallback((id, value, isValid) => {\n\t\tdispatchForm({\n\t\t\ttype: 'INPUT_CHANGE',\n\t\t\tvalue,isValid,inputId\n\t\t})\n\t})\n}"]},"metadata":{},"sourceType":"module"}