{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { css } from \"@emotion/core\";\nimport { connect } from 'react-redux';\nimport { VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MIN } from '../../UTIL/validators';\nimport { useForm } from '../../CUSTOM_HOOKS/formHook';\nimport Card from '../../UI/Card';\nimport Button from '../../UI/Button';\nimport Input from '../../UI/Input';\nimport classes from '../../CSS/Auth.module.css'; // actions\n\nimport { setUser } from '../../REDUX_STORE/ACTIONS/UserAction';\n\nconst Auth = props => {\n  _s();\n\n  const override = css`\n\t  display: block;\n\t  margin: 0 auto;\n\t  color: yellow;\n\t`;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInvalidLogin, setInvalidLogin] = useState(false);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const sumbmitHandler = e => {\n    e.preventDefault();\n    let formData = {\n      email: formState.inputs.email.value,\n      password: formState.inputs.password.value\n    };\n    let url = \"https://keepnotesec.herokuapp.com/api/users/login\";\n    setIsLoading(true);\n    Axios({\n      url: url,\n      method: 'POST',\n      data: formData\n    }).then(response => {\n      if (response.data.errors) {\n        console.log(\"user logged errors\", response.data.errors);\n        setIsLoading(false);\n        setInvalidLogin(true);\n        setTimeout(() => {\n          setInvalidLogin(false);\n        }, 3000);\n      } else {\n        localStorage.setItem('userAuthToken', response.data.token);\n        setUser();\n        setIsLoading(false);\n        props.history.push('/contests');\n      }\n    }).catch(error => {\n      console.log(\"LOGIN CATCH ERROR\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Authentication,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [isInvalidLogin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Invalid Email / Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sumbmitHandler,\n        className: classes.LoginForm,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          inputtype: \"input\",\n          type: \"text\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          label: \"Email\",\n          onInput: inputHandler,\n          errortext: \"Please enter valid email.\",\n          validators: [VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          inputtype: \"input\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          element: \"input\",\n          label: \"Password\",\n          onInput: inputHandler,\n          errortext: \"Please enter valid password.\",\n          validators: [VALIDATOR_REQUIRE(), VALIDATOR_MIN(6)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"Small\",\n          disabled: !formState.formIsValid,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(PulseLoader, {\n            color: \"white\",\n            loading: isLoading,\n            size: 5,\n            css: override\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 32\n          }, this) : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Auth, \"EGUTxJhH1835+8Iu1V0RpflcHVM=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(Auth);\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Auth/Auth.js"],"names":["React","useState","Axios","PulseLoader","css","connect","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MIN","useForm","Card","Button","Input","classes","setUser","Auth","props","override","isLoading","setIsLoading","isInvalidLogin","setInvalidLogin","formState","inputHandler","email","value","isValid","password","sumbmitHandler","e","preventDefault","formData","inputs","url","method","data","then","response","errors","console","log","setTimeout","localStorage","setItem","token","history","push","catch","error","Authentication","LoginForm","formIsValid","mapStateToProps","state","user"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport Axios from 'axios'\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { css } from \"@emotion/core\";\nimport { connect } from 'react-redux'\n\nimport {VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MIN} from '../../UTIL/validators'\nimport {useForm} from '../../CUSTOM_HOOKS/formHook'\n\nimport Card from '../../UI/Card'\nimport Button from '../../UI/Button'\nimport Input from '../../UI/Input'\n\nimport classes from '../../CSS/Auth.module.css'\n\n// actions\nimport {setUser} from '../../REDUX_STORE/ACTIONS/UserAction'\n\nconst Auth = (props) => {\n\tconst override = css`\n\t  display: block;\n\t  margin: 0 auto;\n\t  color: yellow;\n\t`;\n\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [isInvalidLogin, setInvalidLogin] = useState(false)\n\n\tconst [formState, inputHandler] = useForm({\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        }, false)\n\t\n\tconst sumbmitHandler = (e) => {\n\t\te.preventDefault()\n\n\t\tlet formData = {\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n        }\n\n        let url = \"https://keepnotesec.herokuapp.com/api/users/login\"\n\n        setIsLoading(true)\n\n\t\tAxios({\n            url: url,\n            method: 'POST',\n            data: formData\n        }).then (response => {\n        \tif(response.data.errors){\n\t\t\t\tconsole.log(\"user logged errors\", response.data.errors)\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tsetInvalidLogin(true)\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetInvalidLogin(false)\n\t\t\t\t}, 3000)\n\t        }else{\n\t\t\t\tlocalStorage.setItem('userAuthToken', response.data.token)\n\t\t\t\tsetUser()\n\t\t\t\tsetIsLoading(false)\n\t            props.history.push('/contests')\n\t        }\n        }).catch(error => {\n        \tconsole.log(\"LOGIN CATCH ERROR\", error)\n        })\n\t}\n\n\treturn (\n\t\t<div className = {classes.Authentication}>\n\t\t\t<Card>\n\t\t\t\t{isInvalidLogin && <p>Invalid Email / Password</p>}\n\t\t\t\t<form onSubmit = {sumbmitHandler} className = {classes.LoginForm}>\n\t\t\t\t\t<Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"email\"\n\t                    placeholder = \"Enter email\"\n\t                    label = \"Email\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid email.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n\t                />\n\n\t                <Input \n\t                \tinputtype = \"input\"\n\t                    type = \"password\"\n\t                    id = \"password\"\n\t                    placeholder = \"Enter password\"\n\t                    element = \"input\"\n\t                    label = \"Password\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid password.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_MIN(6)]}\n\t                />\n\n\t                <Button \n\t                \ttype = \"submit\"\n\t                \tsize = \"Small\"\n\t                \tdisabled = {!formState.formIsValid}\n\t                >\n\t                \t{isLoading ? <PulseLoader color=\"white\" loading={isLoading} size={5} css={override}/> : 'Login'}\n\t                </Button>\n\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n    return {user: state.user}\n}\n\nexport default connect(mapStateToProps)(Auth);"]},"metadata":{},"sourceType":"module"}