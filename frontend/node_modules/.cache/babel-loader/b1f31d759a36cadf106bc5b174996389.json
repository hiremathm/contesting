{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Axios from 'axios';\nimport { VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MIN } from '../../UTIL/validators';\nimport { useForm } from '../../CUSTOM_HOOKS/formHook';\nimport Card from '../../UI/Card';\nimport Button from '../../UI/Button';\nimport Input from '../../UI/Input';\nimport LoadingSpinner from '../../LoadingSpinner';\nimport classes from '../../CSS/Auth.module.css';\n\nconst Auth = props => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [formState, inputHandler] = useForm({\n    email: {\n      value: '',\n      isValid: false\n    },\n    password: {\n      value: '',\n      isValid: false\n    }\n  }, false);\n\n  const sumbmitHandler = async e => {\n    e.preventDefault();\n    let formData = {\n      email: formState.inputs.email.value,\n      password: formState.inputs.password.value\n    };\n    let url = \"https://keepnotesec.herokuapp.com/api/users/login\";\n    setIsLoading(true);\n    const response = await Axios({\n      url: url,\n      method: 'POST',\n      data: formData\n    });\n\n    if (response.data.errors) {\n      console.log(\"user logged errors\", response.data.errors);\n      setIsLoading(false);\n    } else {\n      console.log(\"LOGIN RESPONSE\", response.data);\n      localStorage.setItem('userAuthToken', response.data.token);\n      setIsLoading(false);\n      props.history.push('/contests');\n    }\n  };\n\n  if (isLoading) {\n    console.log(\"Loading...\");\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      asOverlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Authentication,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sumbmitHandler,\n        className: classes.LoginForm,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          inputtype: \"input\",\n          type: \"text\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          label: \"Email\",\n          onInput: inputHandler,\n          errortext: \"Please enter valid email.\",\n          validators: [VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          inputtype: \"input\",\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          element: \"input\",\n          label: \"Password\",\n          onInput: inputHandler,\n          errortext: \"Please enter valid password.\",\n          validators: [VALIDATOR_REQUIRE(), VALIDATOR_MIN(6)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"Small\",\n          disabled: !formState.formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Auth, \"kQRltpMDlNGuIcy78mg5ePCCZFM=\", false, function () {\n  return [useForm];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/CONTAINERS/Auth/Auth.js"],"names":["React","useState","useContext","Axios","VALIDATOR_REQUIRE","VALIDATOR_EMAIL","VALIDATOR_MIN","useForm","Card","Button","Input","LoadingSpinner","classes","Auth","props","isLoading","setIsLoading","formState","inputHandler","email","value","isValid","password","sumbmitHandler","e","preventDefault","formData","inputs","url","response","method","data","errors","console","log","localStorage","setItem","token","history","push","Authentication","LoginForm","formIsValid"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react'\nimport Axios from 'axios'\n\nimport {VALIDATOR_REQUIRE, VALIDATOR_EMAIL, VALIDATOR_MIN} from '../../UTIL/validators'\nimport {useForm} from '../../CUSTOM_HOOKS/formHook'\n\nimport Card from '../../UI/Card'\nimport Button from '../../UI/Button'\nimport Input from '../../UI/Input'\nimport LoadingSpinner from '../../LoadingSpinner'\n\nimport classes from '../../CSS/Auth.module.css'\nconst Auth = (props) => {\n\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [formState, inputHandler] = useForm({\n            email: {\n                value: '',\n                isValid: false\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        }, false)\n\t\n\tconst sumbmitHandler = async (e) => {\n\t\te.preventDefault()\n\n\t\tlet formData = {\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n        }\n\n        let url = \"https://keepnotesec.herokuapp.com/api/users/login\"\n\n        setIsLoading(true)\n\n        const response = await Axios({\n            url: url,\n            method: 'POST',\n            data: formData\n        })\n\n        if(response.data.errors){\n\t\t\tconsole.log(\"user logged errors\", response.data.errors)\n\t\t\tsetIsLoading(false)\n        }else{\n\t\t\tconsole.log(\"LOGIN RESPONSE\", response.data)\n\t\t\tlocalStorage.setItem('userAuthToken', response.data.token)\n\t\t\tsetIsLoading(false)\n            props.history.push('/contests')\n        }\n\t}\n\n\tif(isLoading){\n\t\tconsole.log(\"Loading...\")\n\t\treturn <LoadingSpinner asOverlay/>\n\t}\n\n\treturn (\n\t\t<div className = {classes.Authentication}>\n\t\t\t<Card>\n\t\t\t\t<form onSubmit = {sumbmitHandler} className = {classes.LoginForm}>\n\t\t\t\t\t<Input\n\t                \tinputtype = \"input\" \n\t                    type = \"text\"\n\t                    id = \"email\"\n\t                    placeholder = \"Enter email\"\n\t                    label = \"Email\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid email.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n\t                />\n\n\t                <Input \n\t                \tinputtype = \"input\"\n\t                    type = \"password\"\n\t                    id = \"password\"\n\t                    placeholder = \"Enter password\"\n\t                    element = \"input\"\n\t                    label = \"Password\"\n\t                    onInput = {inputHandler}\n\t                    errortext = \"Please enter valid password.\"\n\t                    validators = {[VALIDATOR_REQUIRE(), VALIDATOR_MIN(6)]}\n\t                />\n\n\t                <Button \n\t                \ttype = \"submit\"\n\t                \tsize = \"Small\"\n\t                \tdisabled = {!formState.formIsValid}\n\t                >\n\t                \tLogin\n\t                </Button>\n\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}