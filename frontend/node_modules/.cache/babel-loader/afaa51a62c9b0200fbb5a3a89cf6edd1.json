{"ast":null,"code":"import _regeneratorRuntime from\"/home/s/personal/Javascript/React/contesting-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/s/personal/Javascript/React/contesting-engine/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'../../AXIOS_CONFIG/Axios';export var getContests=function getContests(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/contests');case 3:response=_context.sent;if(!(response.status===200)){_context.next=8;break;}dispatch({type:'GET_CONTESTS',payload:response.data.data.items});_context.next=9;break;case 8:throw new Error(\"Opps! Something went wrong.\");case 9:_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);throw new Error(_context.t0.message);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/REDUX_STORE/ACTIONS/ContestAction.js"],"names":["axios","getContests","dispatch","get","response","status","type","payload","data","items","Error","message"],"mappings":"iVAAA,MAAOA,CAAAA,KAAP,KAAkB,0BAAlB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAChC,+FAAO,iBAAOC,QAAP,qKAEkBF,CAAAA,KAAK,CAACG,GAAN,CAAU,WAAV,CAFlB,QAECC,QAFD,oBAGFA,QAAQ,CAACC,MAAT,GAAoB,GAHlB,0BAIJH,QAAQ,CAAC,CACRI,IAAI,CAAE,cADE,CACcC,OAAO,CAAEH,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBC,KAD1C,CAAD,CAAR,CAJI,kCAQE,IAAIC,CAAAA,KAAJ,CAAU,6BAAV,CARF,8FAWC,IAAIA,CAAAA,KAAJ,CAAU,YAAMC,OAAhB,CAXD,sEAAP,+DAcA,CAfM","sourcesContent":["import axios from '../../AXIOS_CONFIG/Axios'\n\nexport const getContests = () => {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tconst response = await axios.get('/contests')\t\n\t\t\tif(response.status === 200){\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'GET_CONTESTS', payload: response.data.data.items\n\t\t\t\t})\n\t\t\t}else{\n\t\t\t\tthrow new Error(\"Opps! Something went wrong.\")\n\t\t\t}\t\t\t\n\t\t}catch(error){\n\t\t\tthrow new Error(error.message)\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module"}