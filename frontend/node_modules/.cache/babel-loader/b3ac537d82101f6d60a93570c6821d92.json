{"ast":null,"code":"import Axios from 'axios';\nexport const setUser = () => {\n  const token = localStorage.getItem('userAuthToken');\n  return async (dispatch, getState) => {\n    const url = \"https://keepnotesec.herokuapp.com/api//users/account\";\n\n    try {\n      const response = await Axios({\n        method: 'post',\n        url: url,\n        data: {},\n        headers: {\n          \"x-auth\": token\n        }\n      });\n      const responseData = await response.data;\n      dispatch({\n        type: 'SET_USER',\n        payload: responseData\n      });\n    } catch (error) {\n      console.log(\"ERROR\", error);\n    }\n  };\n};","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/REDUX_STORE/ACTIONS/UserAction.js"],"names":["Axios","setUser","token","localStorage","getItem","dispatch","getState","url","response","method","data","headers","responseData","type","payload","error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC5B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AAEA,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEpC,UAAMC,GAAG,GAAG,sDAAZ;;AACA,QAAI;AACH,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;AACnBS,QAAAA,MAAM,EAAE,MADW;AAEnBF,QAAAA,GAAG,EAAEA,GAFc;AAGnBG,QAAAA,IAAI,EAAE,EAHa;AAInBC,QAAAA,OAAO,EAAE;AAAC,oBAAUT;AAAX;AAJU,OAAD,CAA5B;AAOG,YAAMU,YAAY,GAAG,MAAMJ,QAAQ,CAACE,IAApC;AACAL,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,UAAP;AAAkBC,QAAAA,OAAO,EAAEF;AAA3B,OAAD,CAAR;AACH,KAVD,CAUC,OAAMG,KAAN,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA;AACD,GAhBD;AAiBA,CApBM","sourcesContent":["import Axios from 'axios'\nexport const setUser = () => {\n\tconst token = localStorage.getItem('userAuthToken') \n\n\treturn async (dispatch, getState) => {\n\t\t\n\t\tconst url = \"https://keepnotesec.herokuapp.com/api//users/account\"\n\t\ttry {\n\t\t\tconst response = await Axios({\n            \tmethod: 'post',\n            \turl: url,\n            \tdata: {},\n            \theaders: {\"x-auth\": token}\n        \t})\n\n\t\t    const responseData = await response.data\n\t\t    dispatch({type: 'SET_USER',payload: responseData})\n\t\t}catch(error){\n\t\t\tconsole.log(\"ERROR\", error)\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module"}