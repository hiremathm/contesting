{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/s/personal/Javascript/React/contesting-engine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Layout from './UI/Layout'; // import Contests from './CONTAINERS/Contests'\n\nimport Winners from './CONTAINERS/Winners';\nimport Slots from './CONTAINERS/Slots';\nimport Reports from './CONTAINERS/Reports';\nimport Auth from './CONTAINERS/Auth/Auth'; // lazy loading\n\nconst Contests = /*#__PURE__*/React.lazy(_c = () => import('./CONTAINERS/Contests')); // auth context \n\n_c2 = Contests;\nimport { AuthContext } from './CONTEXTS/AuthContext'; // dispatch action\n// import { useDispatch } from 'react-redux'\n\nconst App = () => {\n  _s();\n\n  // const dispatch = useDispatch()\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const login = useCallback(() => {\n    setIsLoggedIn(true);\n  }, [setIsLoggedIn]);\n  const logout = useCallback(() => {\n    setIsLoggedIn(false); // localStorage.removeItem('userAuthToken')\n    // dispatch(logout())\n  }, [setIsLoggedIn]);\n  useEffect(() => {\n    const userData = localStorage.getItem('userData');\n\n    if (userData) {\n      // dispatch(setUser())\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, [setIsLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"/*\", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/contests\",\n              component: Contests,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), \"*/\", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"contests\",\n              render: () => /*#__PURE__*/_jsxDEV(Suspense, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/slots\",\n              component: Slots,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/winners\",\n              component: Winners,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/reports\",\n              component: Reports,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"contests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/authentication\",\n              component: Auth,\n              exact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/authentication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"Y+rF/rxqLsT3Lgwrl5djr17DM5Y=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Contests$React.lazy\");\n$RefreshReg$(_c2, \"Contests\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/s/personal/Javascript/React/contesting-engine/src/App.js"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Route","Redirect","Layout","Winners","Slots","Reports","Auth","Contests","lazy","AuthContext","App","isLoggedIn","setIsLoggedIn","login","logout","userData","localStorage","getItem"],"mappings":"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","sourcesContent":["import React,{useCallback, useEffect, useState} from 'react'\n\nimport {BrowserRouter, Route, Redirect} from 'react-router-dom'\n\nimport Layout from './UI/Layout'\n// import Contests from './CONTAINERS/Contests'\nimport Winners from './CONTAINERS/Winners'\nimport Slots from './CONTAINERS/Slots'\nimport Reports from './CONTAINERS/Reports'\nimport Auth from './CONTAINERS/Auth/Auth'\n\n\n// lazy loading\n\nconst Contests = React.lazy(() => import('./CONTAINERS/Contests'))\n\n// auth context \nimport { AuthContext } from './CONTEXTS/AuthContext'\n\n// dispatch action\n// import { useDispatch } from 'react-redux'\n\nconst App = () => {\n\t// const dispatch = useDispatch()\n\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false)\n\n\tconst login = useCallback(() => {\n\t\tsetIsLoggedIn(true)\n\t}, [setIsLoggedIn])\n\n\tconst logout = useCallback(() => {\n\t\tsetIsLoggedIn(false)\n\t\t// localStorage.removeItem('userAuthToken')\n\t\t// dispatch(logout())\n\t}, [setIsLoggedIn])\n\n\tuseEffect(() => {\n\t\tconst userData = localStorage.getItem('userData')\n\t\tif(userData){\n\t\t\t// dispatch(setUser())\n\t\t\tsetIsLoggedIn(true)\n\t\t}else{\n\t\t\tsetIsLoggedIn(false)\n\t\t}\n\t}, [setIsLoggedIn])\n\n  return (\n  \t<AuthContext.Provider value = {{isLoggedIn, login, logout}}>\n\t  \t<BrowserRouter>\n\t\t  \t<div>\n\t\t\t    <Layout>\n\t\t\t    {isLoggedIn ? (\n\t\t\t    \t<>\n\t\t\t\t\t\t/*<Route path = \"/contests\" component = {Contests} exact/>*/\n\t\t\t\t\t\t<Route path = \"contests\" render = {() => (\n\t\t\t\t\t\t\t<Suspense></Suspense>\n\t\t\t\t\t\t)} />\t\t    \t\n\t\t\t\t\t\t<Route path = \"/slots\" component = {Slots} exact/>\t\t    \t\n\t\t\t\t\t\t<Route path = \"/winners\" component = {Winners} exact/>\t\t    \t\n\t\t\t\t\t\t<Route path = \"/reports\" component = {Reports} exact/>\t\n\t\t\t\t\t\t<Redirect to = \"contests\"/>\n\t\t\t    \t</>\n\t\t\t    \t) : (\n\t\t\t    \t<>\n\t\t\t\t\t\t<Route path = \"/authentication\" component = {Auth} exact />\n\t\t\t\t\t\t<Redirect to = \"/authentication\" />\n\t\t\t    \t</>\n\t\t\t    \t)}\n\t\t\t    </Layout>\n\t\t    </div>\n\t    </BrowserRouter>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}